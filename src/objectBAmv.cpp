#include <sys/types.h>
#include <sys/stat.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <cmath>
#include <math.h>
#include <cassert>
#include <cstring>
#include <eigen3/Eigen/Dense>

#include <stdlib.h>

#include <ceres/ceres.h>
#include <ceres/rotation.h>
#include <eigen3/Eigen/Dense>
#include <iostream>
#include <cstdlib>
#include <deque>
#include <map>
#include <opencv2/core/eigen.hpp>
#include <opencv2/opencv.hpp>
using namespace Eigen;
using namespace std;


#include <ceres/ceres.h>
#include <ceres/rotation.h>
#include <eigen3/Eigen/Dense>
#include <Eigen/Geometry>


#include <Eigen/Dense>

#include "glog/logging.h"

#include "sophus/se3.hpp"
#include "sophus/so3.hpp"


using namespace Eigen;
using namespace std;
using namespace ceres;

struct ReprojectionErrorNum
{
	ReprojectionErrorNum(double obj_fix_x, double obj_fix_y, double obj_fix_z,double obj_mv_x, double obj_mv_y, double obj_mv_z, double objectWeight)
		:obj_fix_x(obj_fix_x), obj_fix_y(obj_fix_y), obj_fix_z(obj_fix_z),obj_mv_x(obj_mv_x), obj_mv_y(obj_mv_y), obj_mv_z(obj_mv_z), objectWeight(objectWeight)
		{}

    template <typename T>
	bool operator()(const T* const camera_R, const T* const camera_T,const T* const obj_R, const T* const obj_T, T* residuals) const
	{

        T p_mv[3];
        T p_fx[3];
        p_fx[0] = T(obj_fix_x);
        p_fx[1] = T(obj_fix_y);
        p_fx[2] = T(obj_fix_z);

        ceres::QuaternionRotatePoint(obj_R, p_fx, p_mv);
        p_mv[0] += obj_T[0]; 
        p_mv[1] += obj_T[1]; 
        p_mv[2] += obj_T[2];
        ceres::QuaternionRotatePoint(camera_R, p_mv, p_mv);
        p_mv[0] += camera_T[0]; 
        p_mv[1] += camera_T[1]; 
        p_mv[2] += camera_T[2];

	    residuals[0] = T(objectWeight)*(p_mv[0] - T(obj_mv_x));
	    residuals[1] = T(objectWeight)*(p_mv[1] - T(obj_mv_y));
        residuals[2] = T(objectWeight)*(p_mv[2] - T(obj_mv_z));

    	return true;
	}

	static ceres::CostFunction* Create(const double obj_fix_x, const double obj_fix_y, const double obj_fix_z,const double obj_mv_x, const double obj_mv_y, const double obj_mv_z, const double objectWeight) 
	{
	  return (new ceres::AutoDiffCostFunction<
	          ReprojectionErrorNum, 3, 4, 3, 4, 3>(
	          	new ReprojectionErrorNum(obj_fix_x,obj_fix_y,obj_fix_z,obj_mv_x, obj_mv_y, obj_mv_z,objectWeight)));
	}

	double obj_fix_x;
	double obj_fix_y;
    double obj_fix_z;

    double obj_mv_x;
    double obj_mv_y;
    double obj_mv_z;

    double objectWeight;

};



int main(int argc, char** argv) {


    int kNumObservations = 0;


    ceres::Problem problem;

	ceres::LocalParameterization* local_parameterization = new ceres::QuaternionParameterization();

	double c_rotation[4];
	double c_translation[3];

// -0.5 -0.5 -0.5  0.5
    c_rotation[0] =  1.0;
    c_rotation[1] =  0.0;
    c_rotation[2] =  0.0;
    c_rotation[3] =  0.0;

    c_translation[0] = 0.0;
    c_translation[1] = 0.0;
    c_translation[2] = 0.0;

    

    problem.AddParameterBlock(c_rotation, 4, local_parameterization);
    problem.AddParameterBlock(c_translation, 3);



    double p_rotation[4][4];
    double p_translation[4][3];

// -0.5 -0.5 -0.5  0.5


    for (int i=0;i<4;i++){
        p_rotation[i][0] =  1.0;
        p_rotation[i][1] =  0.0;
        p_rotation[i][2] =  0.0;
        p_rotation[i][3] =  0.0;

        p_translation[i][0] = 0.0;
        p_translation[i][1] = 0.0;
        p_translation[i][2] = 0.0;
        problem.AddParameterBlock(p_rotation[i], 4, local_parameterization);
        problem.AddParameterBlock(p_translation[i], 3);
    }
    





    const double data1[] = {
    -1.7521,-1.15129,2.892,-1.84373,-1.10165,2.898,
    -1.80781,-1.26023,3.005,-2.04356,-1.31702,3.249,
    -1.74571,-1.20032,2.944,-1.87046,-1.17085,3,
    -1.64599,-1.11078,2.827,-1.75263,-1.07075,2.864,
    -1.64599,-1.11078,2.827,-1.75263,-1.07075,2.864,
    -0.945027,0.676695,1.618,-1.08761,0.566036,1.784,
    -1.60072,-0.949242,2.771,-1.64255,-0.850941,2.697,
    -0.937776,0.43385,1.845,-0.982597,0.678733,1.618,
    -1.63699,-1.14711,2.855,-1.75229,-1.11256,2.906,
    -0.893938,0.194963,1.908,-1.07633,0.560178,1.792,
    -1.56365,-0.993085,2.752,-1.65623,-0.927099,2.762,
    -1.55624,-0.954459,2.746,-1.61715,-0.868893,2.704,
    -0.92615,0.397353,1.874,-0.991166,0.647863,1.665,
    -1.5819,-1.08174,2.801,-1.67995,-1.03549,2.835,
    -1.62002,-1.16469,2.878,-1.75267,-1.1523,2.964,
    -0.547567,0.450718,1.416,-1.22272,-0.450776,2.069,
    -1.59435,-1.12736,2.842,-1.69396,-1.08385,2.881,
    -1.51721,-1.04813,2.761,-1.62363,-1.00897,2.823,
    -1.44847,-0.91257,2.674,-1.49958,-0.820692,2.619,
    -0.876688,-0.413887,1.965,-1.01408,-0.222582,1.801,
    -1.58514,-1.22989,3.009,-1.71217,-1.22818,3.132,
    -1.58514,-1.22989,3.009,-1.71217,-1.22818,3.132,
    -0.88037,0.489531,1.914,-0.861408,0.708499,1.583,
    -1.50195,-1.12817,2.878,-1.56291,-1.07626,2.888,
    -0.889665,0.366782,2.018,-0.923609,0.609614,1.725,
    -0.870538,0.479492,1.939,-0.849506,0.696681,1.602,
    0.887404,-0.330683,1.77,-0.786846,0.764635,1.493,
    -1.39491,-0.992755,2.746,-1.45538,-0.94011,2.774,
    -0.83513,0.481973,1.936,-0.820229,0.698855,1.597,
    -1.35699,-0.969751,2.739,-1.4229,-0.93137,2.799,
    -0.870318,0.191398,1.38,-0.780291,0.717233,1.558,
    -0.85834,0.409149,2.069,-0.849812,0.621825,1.717,
    -0.915586,-0.562735,2.084,-0.941326,-0.398391,1.92,
    -0.920682,-0.578453,2.101,-0.934703,-0.407772,1.908,
    -0.912705,-0.549854,2.086,-0.930009,-0.382235,1.902,
    -0.912705,-0.549854,2.086,-0.930009,-0.382235,1.902,
    -1.35094,-1.04077,2.826,-1.39885,-1.00338,2.874,
    -0.896341,-0.377241,2.129,-1.35089,-0.249376,2.792,
    -0.881506,-0.459883,2.039,-0.889678,-0.288733,1.848,
    -0.90736,-0.569747,2.118,-0.883693,-0.382917,1.848,
    -0.902345,-0.616173,2.148,-0.86346,-0.417592,1.84,
    -0.897464,-0.591042,2.14,-0.862325,-0.395491,1.842,
    0.970263,0.129032,1.937,-0.994289,0.376695,2.132,
    -0.890704,-0.61021,2.155,-0.849219,-0.411557,1.845,
    -0.807023,-0.407802,2.007,-0.799441,-0.218536,1.759,
    -0.875711,-0.552053,2.144,-0.840283,-0.35885,1.851,
    -1.28625,-1.06781,2.886,-1.32404,-1.02256,2.918,
    -0.871836,-0.347842,2.182,-0.837158,-0.142268,1.855,
    -0.930686,0.18213,2.452,-0.681764,0.75209,1.513,
    -0.795947,-0.39823,2.005,-0.77586,-0.206711,1.742,
    -0.844943,-0.3766,2.135,-0.781581,-0.177425,1.76,
    -0.87934,-0.62717,2.188,-0.914004,-0.469228,2.066,
    -1.56099,-1.37157,3.569,-1.33183,-1.11201,3.027,
    -1.56099,-1.37157,3.569,-1.33183,-1.11201,3.027,
    -1.46825,-1.26745,3.361,-1.30656,-1.06588,2.972,
    -0.864788,-0.564472,2.175,-0.865426,-0.403693,1.973,
    -0.834229,-0.484358,2.116,-0.794833,-0.292797,1.832,
    -0.930686,0.18213,2.452,-0.892061,0.385324,2.114,
    -1.25553,-1.08978,3.056,-1.20104,-0.96009,2.886,
    -0.778882,-0.405245,2.147,-0.728049,-0.179861,1.754,
    -0.780901,-0.37818,2.168,-0.720312,-0.158933,1.774,
    -1.46071,-1.44837,3.61,-1.27026,-1.20719,3.129,
    -1.44284,-1.37562,3.581,-1.18862,-1.07774,2.948,
    -1.14923,-0.999386,2.89,-1.14462,-0.912053,2.84,
    -1.28199,-1.18531,3.198,-1.18015,-1.0322,2.937,
    -1.28199,-1.18531,3.198,-1.18015,-1.0322,2.937,
    -1.30908,-1.31872,3.313,-1.13613,-1.09725,2.878,
    -1.30908,-1.31872,3.313,-1.13613,-1.09725,2.878
    };
    
    const double graychair[] = {-0.971108,0.190715,1.887,-1.16372,0.54099,1.798,
    -0.732005,-0.422148,1.546,-1.29257,-0.516686,2.057,
    -1.03368,0.581047,1.79,-0.930795,0.746712,1.524,
    -0.937776,0.43385,1.845,-0.982597,0.678733,1.618,
    -0.723947,0.125771,1.602,-1.08659,0.559231,1.79,
    -0.893938,0.194963,1.908,-1.07633,0.560178,1.792,
    -0.92615,0.397353,1.874,-0.991166,0.647863,1.665,
    -0.91428,-0.0983861,2.161,-1.21953,-0.468949,2.062,
    -0.870318,0.191398,1.38,-0.923368,0.709079,1.58,
    -0.876688,-0.413887,1.965,-1.01408,-0.222582,1.801,
    -0.896341,-0.377241,2.129,-0.874662,0.710171,1.58,
    -0.906064,0.521165,1.851,-1.13005,-0.499589,2.06,
    -0.88037,0.489531,1.914,-0.861408,0.708499,1.583,
    -0.889665,0.366782,2.018,-0.923609,0.609614,1.725,
    -0.741301,-0.183845,1.597,-1.0953,-0.498347,2.056,
    -0.870538,0.479492,1.939,-0.849506,0.696681,1.602,
    -0.83513,0.481973,1.936,-0.820229,0.698855,1.597};


    const double bottle[] ={-0.915586,-0.562735,2.084,-0.941326,-0.398391,1.92,
    -0.920682,-0.578453,2.101,-0.934703,-0.407772,1.908,
    -0.912705,-0.549854,2.086,-0.930009,-0.382235,1.902,
    -0.912705,-0.549854,2.086,-0.930009,-0.382235,1.902,
    -0.881506,-0.459883,2.039,-0.889678,-0.288733,1.848,
    -0.881506,-0.459883,2.039,-0.889678,-0.288733,1.848,
    -0.90736,-0.569747,2.118,-0.883693,-0.382917,1.848,
    -0.902345,-0.616173,2.148,-0.86346,-0.417592,1.84,
    -0.897464,-0.591042,2.14,-0.862325,-0.395491,1.842,
    -0.874162,-0.477168,2.075,-0.854722,-0.295719,1.834,
    -0.807023,-0.407802,2.007,-1.14167,-0.750293,2.472,
    -0.890704,-0.61021,2.155,-0.849219,-0.411557,1.845,
    -0.879818,-0.543095,2.132,-0.846997,-0.349653,1.849,
    -0.875711,-0.552053,2.144,-0.840283,-0.35885,1.851};

    const double bluechair[] = {0.662908,-1.06474,3.514,0.910613,-0.984974,3.62,
    0.598064,-0.843516,3.144,0.709327,-0.608657,2.791,
    0.723492,-1.09526,3.616,0.9405,-0.972372,3.569,
    0.226502,-0.185181,1.064,0.713708,-0.300076,2.578,
    0.675694,-0.686316,3.168,0.769632,-0.447549,2.767,
    0.756162,-1.00937,3.458,0.906781,-0.823726,3.191,
    0.700477,-0.832592,3.175,0.79331,-0.585272,2.747,
    0.748166,-0.755354,3.181,0.839036,-0.510982,2.751,
    0.774191,-0.734603,3.19,0.847986,-0.52774,2.75,
    0.802311,-0.70986,3.19,0.899688,-0.460443,2.766,
    0.996435,-1.18087,3.949,0.848303,-0.0232908,2.565,
    0.80834,-0.106314,3.025,0.860823,0.133954,2.567,
    0.831993,-0.767149,3.18,0.926905,-0.520261,2.764,
    0.793923,-0.335761,2.96,0.826766,-0.0969028,2.439,
    0.830411,-0.11875,3.048,0.880143,0.131065,2.564,
    0.882478,-0.294196,3.175,0.967852,-0.0453971,2.767,
    0.921769,-0.198799,3.166,0.995782,0.0428305,2.78,
    0.921348,-0.196448,3.166,1.01757,0.0535158,2.798,
    0.950928,-0.279971,3.177,1.04118,-0.0345621,2.808,
    0.999371,-0.287341,3.158,1.13772,-0.0486684,2.895,
    0.93619,-0.883697,3.003,1.0349,-0.626247,2.595};


    const double person[] ={-0.933604,-0.873933,2.744,-0.892046,-0.72712,2.563,
    -1.27957,-1.59555,3.63,-1.07911,-1.34792,3.148,
    -0.93747,-0.914947,2.794,-0.887585,-0.76291,2.6,
    -1.25758,-1.50816,3.596,-1.0425,-1.23849,3.067,
    0.157939,0.191678,1.252,-0.801474,-0.563584,2.432,
    -0.946852,-0.991409,2.884,-0.892841,-0.864547,2.736,
    -0.946852,-0.991409,2.884,-0.892841,-0.864547,2.736,
    -1.03784,-1.19259,3.161,-0.936739,-1.02728,2.891,
    -1.0267,-1.16391,3.139,-0.934062,-1.01139,2.898,
    -1.02259,-1.14524,3.117,-0.932246,-0.995961,2.893,
    -1.04432,-1.26233,3.235,-0.939853,-1.09917,2.966,
    -1.18485,-1.51503,3.608,-1.02156,-1.31375,3.226,
    -1.18485,-1.51503,3.608,-1.02156,-1.31375,3.226,
    -0.983731,-1.13082,3.126,-0.92074,-1.0164,2.997,
    -0.983731,-1.13082,3.126,-0.92074,-1.0164,2.997,
    -1.01571,-1.25333,3.234,-0.933358,-1.1186,3.044,
    -0.941244,-1.09139,3.083,-0.898965,-0.999974,3.024,
    -0.360679,0.33592,1.101,-0.307243,0.310551,1.035,
    -0.983361,-1.22777,3.222,-0.927069,-1.13139,3.132,
    -0.348053,0.220745,1.067,-0.313717,0.217243,1.062,
    -0.952166,-1.13746,3.141,-0.91061,-1.05136,3.094,
    -0.960434,-0.804573,3.248,-0.899036,-0.658091,3.065,
    -1.06575,-1.42988,3.538,-0.958746,-1.27709,3.301,
    -0.336199,0.260104,1.071,-0.300316,0.254178,1.059,
    -0.351006,0.395997,1.137,-0.314381,0.383091,1.119,
    -0.357408,0.322039,1.152,-0.441799,0.439238,1.575,
    -0.661534,0.329827,2.186,-0.608225,0.324152,2.208,
    -0.329083,0.404882,1.093,-0.302557,0.401884,1.106,
    -0.336131,0.378539,1.121,-0.321927,0.394676,1.179,
    -1.04883,-1.47083,3.688,-0.914224,-1.28967,3.363,
    -0.339997,-0.122131,1.12,-0.308602,-0.125436,1.152,
    -0.420438,0.212664,1.469,-0.33965,0.187163,1.318,
    -0.347078,0.219004,1.23,-0.32586,0.223141,1.282,
    -0.997571,-1.5521,3.695,-0.849799,-1.36724,3.355,
    -0.169086,0.101855,1.222,-0.291617,-0.110198,1.155,
    -0.328944,0.334092,1.179,-0.421702,0.474758,1.674,
    -1.00651,-1.0242,3.713,-0.885735,-0.704755,3.519,
    -0.334118,-0.0188339,1.193,-0.305143,-0.0165344,1.235,
    -0.319699,-0.0379557,1.173,-0.290581,-0.0365912,1.213,
    -0.94873,-1.43571,3.734,-0.816782,-1.25951,3.419,
    -0.294226,-0.158502,1.077,-0.260635,-0.154771,1.104,
    -0.297994,-0.0650472,1.149,-0.266445,-0.0640848,1.178,
    -0.260865,0.459006,1.044,-0.240405,0.461606,1.069,
    -0.318053,0.109156,1.263,-0.289192,0.111831,1.296,
    -0.298511,0.324478,1.199,-0.376679,0.452934,1.693,
    -0.298511,0.324478,1.199,-0.376679,0.452934,1.693,
    -0.295739,-0.084216,1.135,-0.257589,-0.0786339,1.161,
    -0.925365,-1.29681,3.783,-0.762002,-1.14339,3.466,
    -0.318106,0.218925,1.302,-0.302272,0.229512,1.38,
    -0.308094,0.0738366,1.243,-0.27898,0.0766074,1.279,
    -0.269602,-0.198974,1.055,-0.23453,-0.194516,1.076,
    -0.260267,-0.243645,1.043,-0.229301,-0.243449,1.083,
    -0.273879,-0.085988,1.127,-0.240799,-0.0825649,1.15,
    -0.289946,0.300356,1.245,-0.368107,0.42491,1.779,
    -0.284624,0.307715,1.231,-0.338678,0.40761,1.648,
    -0.284624,0.307715,1.231,-0.338678,0.40761,1.648,
    -0.264865,0.38062,1.155,-0.238391,0.381241,1.169,
    -0.264865,0.38062,1.155,-0.238391,0.381241,1.169,
    -0.268064,-0.0591388,1.142,-0.23495,-0.0560942,1.164,
    -0.280309,0.299408,1.245,-0.295481,0.353448,1.482,
    -0.28237,0.104937,1.241,-0.2533,0.107996,1.277,
    -0.286113,0.283056,1.295,-0.346329,0.384338,1.777,
    -0.24446,-0.255453,1.054,-0.209847,-0.251182,1.077,
    -0.81682,-1.41169,3.771,-0.672825,-1.2332,3.455,
    -0.81682,-1.41169,3.771,-0.672825,-1.2332,3.455,
    -0.287399,0.272308,1.313,-0.341536,0.365907,1.768,
    -0.208289,0.501991,0.971,-0.190602,0.508026,0.993,
    -0.280664,0.282239,1.292,-0.301552,0.341066,1.575,
    -0.808422,-1.3218,3.798,-0.663306,-1.13808,3.476,
    -0.21093,0.487773,0.98,-0.191081,0.493742,1.002,
    -0.797169,-1.362,3.786,-0.655723,-1.18116,3.465,
    -0.779735,-1.42898,3.771,-0.63818,-1.24984,3.454,
    -0.0818513,0.484622,0.935,-0.181615,0.50637,0.989,
    -0.198504,0.479095,0.98,-0.179069,0.484148,1.002,
    -0.259113,0.190269,1.268,-0.233615,0.1955,1.314,
    -0.197511,0.456275,0.999,-0.179337,0.461795,1.025,
    -0.759561,-1.37635,3.793,-0.604777,-1.17896,3.469,
    -0.253045,0.262219,1.29,-0.232122,0.272437,1.354,
    -0.251559,0.209358,1.277,-0.223503,0.216943,1.319,
    -0.246255,0.161682,1.24,-0.21333,0.169614,1.271,
    -0.245941,0.212671,1.278,-0.217168,0.2189,1.314,
    -0.192425,0.436853,1.023,-0.172739,0.442496,1.046,
    -0.384623,-0.542134,1.943,-0.349925,-0.58781,2.186,
    -0.223893,0.0441451,1.192,-0.193598,0.0487166,1.223,
    -0.232921,0.192655,1.262,-0.201733,0.196543,1.285,
    -0.20371,0.367452,1.134,-0.180031,0.37404,1.162,
    -0.202707,0.352097,1.159,-0.1789,0.358983,1.189,
    -0.703238,-1.17654,3.781,-0.520987,-1.06064,3.527,
    -0.18121,0.411071,1.065,-0.158866,0.416419,1.087,
    -0.18121,0.411071,1.065,-0.158866,0.416419,1.087,
    -0.210553,0.298982,1.247,-0.185519,0.307733,1.287,
    -0.210553,0.298982,1.247,-0.185519,0.307733,1.287,
    -0.209004,0.299715,1.244,-0.183743,0.30852,1.283,
    -0.215926,0.22066,1.282,-0.18643,0.224576,1.305,
    -0.217073,0.25971,1.297,-0.188287,0.265519,1.334,
    -0.156669,0.476129,0.968,-0.137601,0.482256,0.989,
    -0.156669,0.476129,0.968,-0.137601,0.482256,0.989,
    -0.207111,0.208692,1.271,-0.177151,0.21501,1.296,
    -0.210285,-0.379607,1.208,-0.159024,-0.353595,1.172,
    -0.190519,0.30937,1.23,-0.165164,0.318252,1.267,
    -0.648372,-1.39143,3.829,-0.448729,-1.20595,3.478,
    -0.227284,-0.463193,1.361,-0.144356,-0.370144,1.127,
    -0.198472,0.260929,1.298,-0.169861,0.268754,1.335,
    -0.198472,0.260929,1.298,-0.169861,0.268754,1.335,
    -0.1673,-0.167928,1.073,-0.132362,-0.161667,1.092,
    -0.179291,0.152728,1.232,-0.148697,0.158933,1.256,
    -0.338577,-0.976952,2.355,-0.119215,-0.430266,1.085,
    -0.152021,-0.471829,1.086,-0.123094,-0.476523,1.133,
    -0.157601,-0.0426908,1.136,-0.12486,-0.0374661,1.157,
    -0.167831,0.369485,1.139,-0.133577,0.334049,1.239,
    -0.154051,-0.104323,1.107,-0.119977,-0.0979633,1.126,
    -0.151539,-0.113858,1.102,-0.117014,-0.10863,1.12,
    -0.133743,0.412979,1.07,-0.111568,0.41844,1.089,
    -0.133743,0.412979,1.07,-0.111568,0.41844,1.089,
    -0.144399,-0.144942,1.088,-0.110099,-0.138529,1.107,
    -0.136111,0.386528,1.111,-0.112784,0.393399,1.134,
    -0.154772,0.159502,1.237,-0.12328,0.165249,1.258,
    -0.143043,-0.131919,1.094,-0.10871,-0.125163,1.113,
    -0.141231,-0.151617,1.083,-0.10683,-0.145093,1.102,
    -0.143629,-0.0566424,1.135,-0.109946,-0.0495834,1.155,
    -0.157216,0.249404,1.303,-0.125433,0.254912,1.329,
    -0.139424,-0.111876,1.106,-0.10575,-0.10362,1.124,
    -0.139866,0.334297,1.194,-0.114777,0.343146,1.225,
    -0.139866,0.334297,1.194,-0.114777,0.343146,1.225,
    -0.136476,-0.168063,1.075,-0.101483,-0.161247,1.094,
    -0.143074,0.304673,1.243,-0.116923,0.314651,1.28,
    -0.14664,0.150953,1.237,-0.113313,0.157596,1.259,
    -0.132506,-0.197215,1.061,-0.0951191,-0.190536,1.078,
    -0.131057,-0.153685,1.082,-0.0965827,-0.14695,1.102,
    -0.131057,-0.153685,1.082,-0.0965827,-0.14695,1.102,
    -0.131822,-0.100895,1.113,-0.0977398,-0.0942408,1.129,
    -0.131822,-0.100895,1.113,-0.0977398,-0.0942408,1.129,
    -0.133732,-0.0184123,1.153,-0.101065,-0.0119072,1.172,
    -0.134435,-0.033321,1.148,-0.100389,-0.0267642,1.165,
    -0.134435,-0.033321,1.148,-0.100389,-0.0267642,1.165,
    -0.14133,0.260862,1.303,-0.114107,0.270435,1.338,
    -0.126933,-0.0949745,1.118,-0.0925642,-0.0880311,1.132,
    -0.122539,-0.338529,1.033,-0.0856391,-0.331723,1.055,
    -0.173113,0.299626,1.25,-0.0780402,0.47921,0.99,
    -0.118266,-0.134519,1.09,-0.0841528,-0.127221,1.11,
    -0.0634005,0.455871,1.003,-0.0802942,0.42924,1.079,
    -0.0634005,0.455871,1.003,-0.0802942,0.42924,1.079,
    -0.0489477,0.450702,1.027,-0.0783707,0.428125,1.081,
    -0.0489477,0.450702,1.027,-0.0783707,0.428125,1.081,
    -0.116863,-0.0631115,1.141,-0.0825099,-0.0556393,1.156,
    -0.105904,0.403026,1.089,-0.0844826,0.359119,1.196,
    -0.147539,0.431755,1.039,-0.0773046,0.413675,1.104,
    -0.109998,-0.149978,1.08,-0.0758596,-0.143337,1.101,
    -0.1058,0.35363,1.167,-0.0813117,0.361411,1.193,
    -0.0673558,-0.282252,1.036,-0.0711787,-0.288202,1.054,
    -0.113011,0.300368,1.255,-0.086059,0.309852,1.288,
    -0.20056,0.420111,1.049,-0.086059,0.309852,1.288,
    -0.10717,0.06758,1.191,-0.0789767,0.0687123,1.212,
    -0.106584,-0.129514,1.091,-0.0716608,-0.122947,1.109,
    -0.104672,-0.159306,1.077,-0.0701683,-0.152096,1.096,
    -0.103666,-0.145599,1.081,-0.0704488,-0.138392,1.102,
    -0.106147,-0.0926602,1.117,-0.0723467,-0.0853735,1.132,
    -0.0997637,-0.179452,1.07,-0.065206,-0.17212,1.089,
    -0.0829014,0.440777,1.033,-0.0618234,0.44736,1.051,
    -0.0829014,0.440777,1.033,-0.0618234,0.44736,1.051,
    -0.0970817,-0.200417,1.06,-0.061933,-0.192909,1.078,
    -0.0970817,-0.200417,1.06,-0.061933,-0.192909,1.078,
    -0.0970817,-0.200417,1.06,-0.061933,-0.192909,1.078,
    -0.0893553,0.361311,1.156,-0.0626695,0.42143,1.094,
    -0.0893553,0.361311,1.156,-0.0626695,0.42143,1.094,
    -0.0870449,0.387716,1.115,-0.0636015,0.395298,1.136,
    -0.0870449,0.387716,1.115,-0.0636015,0.395298,1.136,
    -0.0952878,-0.135316,1.086,-0.0610367,-0.128309,1.106,
    -0.0909785,0.335709,1.198,-0.0654989,0.345202,1.227,
    -0.0909785,0.335709,1.198,-0.0654989,0.345202,1.227,
    -0.0933793,-0.101376,1.109,-0.0599032,-0.0944804,1.126,
    -0.0808194,0.463252,0.987,-0.0659162,0.3206,1.267,
    -0.0914824,-0.35752,1.029,-0.0540956,-0.351027,1.051,
    -0.0896541,-0.193228,1.063,-0.0550692,-0.185991,1.081,
    -0.0867541,-0.159536,1.074,-0.0527932,-0.152307,1.094,
    -0.0900711,0.0606176,1.193,-0.0585341,0.0677982,1.215,
    -0.0782873,0.387185,1.119,-0.0538221,0.399486,1.129,
    -0.0858561,-0.107091,1.104,-0.052145,-0.0995739,1.121,
    -0.0858561,-0.107091,1.104,-0.052145,-0.0995739,1.121,
    -0.0615136,0.47169,0.969,-0.0424597,0.478615,0.987,
    -0.0806859,-0.163587,1.072,-0.0465173,-0.156059,1.092,
    -0.0795858,-0.131445,1.087,-0.0458676,-0.123902,1.106,
    -0.0795858,-0.131445,1.087,-0.0458676,-0.123902,1.106,
    -0.0789286,-0.138118,1.082,-0.045062,-0.130965,1.103,
    -0.117506,0.377381,1.129,-0.0414509,0.464136,1.028,
    -0.0772791,-0.119011,1.093,-0.0437059,-0.11154,1.113,
    -0.0776579,-0.084407,1.115,-0.0439979,-0.0766312,1.133,
    -0.0776579,-0.084407,1.115,-0.0439979,-0.0766312,1.133,
    -0.0622796,0.326514,1.216,-0.0427266,0.411268,1.111,
    -0.0622796,0.326514,1.216,-0.0427266,0.411268,1.111,
    -0.0758218,-0.149842,1.078,-0.0418674,-0.141662,1.098,
    -0.0760017,0.302115,1.254,-0.0488055,0.312811,1.287,
    -0.0771233,-0.0191075,1.155,-0.0438694,-0.0115756,1.172,
    -0.0754045,-0.109728,1.1,-0.0415347,-0.102429,1.118,
    -0.0749868,0.30131,1.257,-0.0477414,0.31214,1.291,
    -0.0749868,0.30131,1.257,-0.0477414,0.31214,1.291,
    -0.0736749,-0.0632135,1.132,-0.040241,-0.0552334,1.15,
    -0.0716762,-0.184997,1.067,-0.0371817,-0.177252,1.085,
    -0.0734088,-0.00700446,1.161,-0.0397006,0.00144405,1.175,
    -0.0703224,-0.15189,1.077,-0.0362318,-0.144461,1.096,
    -0.0535641,0.452799,1.021,-0.0332873,0.460713,1.039,
    -0.0535641,0.452799,1.021,-0.0332873,0.460713,1.039,
    -0.0696489,-0.354566,1.031,-0.0318335,-0.346021,1.051,
    -0.0673603,-0.13847,1.082,-0.0332583,-0.130921,1.103,
    -0.060053,0.344899,1.187,-0.0345006,0.353852,1.21,
    -0.060053,0.344899,1.187,-0.0345006,0.353852,1.21,
    -0.0688671,0.134834,1.228,-0.0353851,0.14812,1.251,
    -0.0593724,0.344708,1.19,-0.0332632,0.353405,1.213,
    -0.0619373,-0.119385,1.092,-0.0282714,-0.111495,1.112,
    -0.129015,-0.161779,1.078,-0.0269803,-0.186499,1.08,
    -0.0615404,-0.194103,1.06,-0.0269803,-0.186499,1.08,
    -0.0588688,-0.138424,1.082,-0.0251126,-0.130977,1.103,
    -0.0604787,0.126681,1.225,-0.0254161,0.135364,1.246,
    -0.0560948,-0.150582,1.076,-0.0222154,-0.142923,1.097,
    -0.0560948,-0.150582,1.076,-0.0222154,-0.142923,1.097,
    -0.0560948,-0.150582,1.076,-0.0222154,-0.142923,1.097,
    -0.0554688,-0.0848154,1.11,-0.0221723,-0.0765782,1.127,
    -0.0545997,-0.101688,1.103,-0.0212356,-0.0937268,1.121,
    -0.051903,-0.144534,1.081,-0.0179653,-0.136772,1.1,
    -0.050423,-0.130542,1.087,-0.0172341,-0.121063,1.108,
    -0.050412,0.153121,1.236,-0.0188505,0.162162,1.255,
    -0.0418128,0.336713,1.202,-0.015623,0.34625,1.226,
    -0.0418128,0.336713,1.202,-0.015623,0.34625,1.226,
    -0.037989,0.389435,1.12,-0.0144572,0.398043,1.14,
    -0.036333,0.415703,1.079,-0.0136754,0.42414,1.098,
    -0.036333,0.415703,1.079,-0.0136754,0.42414,1.098,
    -0.0470998,-0.0787992,1.112,-0.0136194,-0.0708232,1.13,
    -0.0457792,0.262709,1.304,-0.015567,0.271453,1.329,
    -0.0311286,0.465602,0.974,-0.0115645,0.476693,0.997,
    -0.0457779,-0.100725,1.102,-0.0126253,-0.0928115,1.12,
    -0.0455113,-0.139155,1.084,-0.0120173,-0.131089,1.103,
    -0.0439521,0.0452872,1.195,-0.0126939,0.0526503,1.216,
    -0.0389451,0.0413567,1.191,-0.00923174,0.0471518,1.213,
    -0.0402494,-0.0527069,1.127,-0.00800432,-0.0446817,1.145,
    -0.0373712,-0.0133473,1.152,-0.0073386,-0.00608756,1.166,
    -0.0405304,-0.112776,1.095,-0.0070153,-0.105054,1.115,
    -0.0373476,0.162898,1.239,-0.00706426,0.171179,1.259,
    -0.0373476,0.162898,1.239,-0.00706426,0.171179,1.259,
    -0.0379004,-0.338566,1.037,-0.000634911,-0.329702,1.053,
    -0.0379004,-0.338566,1.037,-0.000634911,-0.329702,1.053,
    -0.031826,-0.150331,1.079,0.0018169,-0.141805,1.097,
    -0.0287956,-0.096043,1.103,0.00449855,-0.0878637,1.121,
    -0.0287956,-0.096043,1.103,0.00449855,-0.0878637,1.121,
    -0.0318799,-0.350305,1.031,0.00552635,-0.341904,1.049,
    -0.0264423,-0.112328,1.097,0.00662888,-0.104157,1.115,
    -0.0183266,0.120641,1.223,0.0130442,0.128338,1.245,
    -0.0143585,0.30371,1.264,0.0135397,0.313554,1.288,
    -0.0202693,-0.075534,1.111,0.012711,-0.0671246,1.13,
    -0.0254427,-0.340203,1.035,0.0118277,-0.33053,1.051,
    -0.0182576,-0.00158825,1.15,0.0141174,0.00749868,1.167,
    -0.0141402,0.162719,1.239,0.0152938,0.17141,1.258,
    -0.0184069,-0.111868,1.098,0.0143877,-0.102274,1.117,
    -0.0181167,-0.0678194,1.114,0.014626,-0.0593593,1.133,
    -0.0231402,-0.353375,1.029,0.0139726,-0.344664,1.047,
    -0.0179386,-0.0994895,1.103,0.0149871,-0.0909869,1.121,
    -0.0174238,-0.120801,1.094,0.0160341,-0.111942,1.111,
    -0.0184247,-0.154843,1.077,0.0158235,-0.146028,1.094,
    -0.0188503,-0.343718,1.034,0.0183484,-0.334568,1.051,
    -0.0188503,-0.343718,1.034,0.0183484,-0.334568,1.051,
    -0.0123277,-0.06277,1.118,0.0204577,-0.0540415,1.137,
    -0.0123277,-0.06277,1.118,0.0204577,-0.0540415,1.137,
    -0.0174208,-0.335866,1.035,0.0198829,-0.327101,1.052,
    -0.015783,-0.357239,1.026,0.0215449,-0.348664,1.045,
    -0.0103457,-0.120448,1.095,0.0231215,-0.111589,1.113,
    -0.00725722,-0.0316758,1.137,0.0252357,-0.0230965,1.153,
    -0.00670486,-0.0492981,1.125,0.0259024,-0.0398643,1.145,
    0.00453866,0.314093,1.247,0.0316571,0.324018,1.269,
    -0.00342499,-0.031327,1.138,0.0300492,-0.0246823,1.152,
    -0.00135529,-0.0268356,1.14,0.0309102,-0.0177446,1.155,
    0.00824862,0.364013,1.165,0.0331508,0.37334,1.184,
    0.00824862,0.364013,1.165,0.0331508,0.37334,1.184,
    -0.000656625,-0.0696058,1.117,0.0322008,-0.06064,1.135,
    0.000540826,-0.039641,1.131,0.0331629,-0.0307264,1.149,
    0.00333723,0.153229,1.235,0.0365256,0.162922,1.255,
    -0.00169867,-0.148442,1.082,0.0324494,-0.139532,1.1,
    -0.00169867,-0.148442,1.082,0.0324494,-0.139532,1.1,
    -0.00106359,-0.0729946,1.115,0.0350378,-0.0645087,1.134,
    0.00320167,-0.0382449,1.133,0.0357434,-0.0290156,1.15,
    0.0119685,0.418566,1.087,0.0343711,0.426147,1.101,
    0.00824862,0.364013,1.165,0.0343711,0.426147,1.101,
    0.0119685,0.418566,1.087,0.0343711,0.426147,1.101,
    -0.00404272,-0.342694,1.033,0.0332005,-0.333319,1.05,
    0.00150868,-0.134236,1.09,0.0353214,-0.125487,1.109,
    0.00322036,-0.142765,1.085,0.0371634,-0.133593,1.102,
    0.00604376,-0.0612623,1.123,0.0391735,-0.0525991,1.142,
    0.00932785,-0.100893,1.107,0.042553,-0.0919218,1.127,
    0.0104731,-0.0857361,1.113,0.0436786,-0.0766323,1.132,
    0.00591387,-0.3111,1.042,0.0408237,-0.299957,1.056,
    0.00591387,-0.3111,1.042,0.0408237,-0.299957,1.056,
    0.021898,0.338084,1.208,0.0482285,0.348599,1.23,
    0.0227809,0.30493,1.268,0.0505902,0.314995,1.288,
    0.00967532,-0.159285,1.079,0.0435306,-0.149777,1.095,
    0.00590754,-0.340524,1.033,0.0431274,-0.331247,1.05,
    0.00590754,-0.340524,1.033,0.0431274,-0.331247,1.05,
    0.024308,0.391496,1.129,0.0472186,0.399562,1.142,
    0.0243803,0.356398,1.177,0.049426,0.36605,1.195,
    0.01909,0.160773,1.239,0.05228,0.171136,1.255,
    0.00659063,-0.349818,1.029,0.0437925,-0.340747,1.047,
    0.00788543,-0.343059,1.031,0.0449489,-0.333914,1.05,
    0.00788543,-0.343059,1.031,0.0449489,-0.333914,1.05,
    0.00862755,-0.330385,1.036,0.0461038,-0.321049,1.053,
    0.0284386,0.277033,1.312,0.06011,0.289182,1.339,
    0.0283349,0.260687,1.299,0.0593406,0.271045,1.319,
    0.0267407,0.441982,1.039,0.0478959,0.451741,1.058,
    0.0183303,-0.0850773,1.114,0.0518645,-0.0754894,1.135,
    0.0278343,0.410989,1.1,0.0510126,0.41869,1.114,
    0.0186299,-0.109089,1.105,0.052381,-0.100271,1.125,
    0.0331368,0.30128,1.282,0.0617143,0.312057,1.304,
    0.0197147,-0.130516,1.095,0.0539094,-0.121189,1.113,
    0.0315038,0.427095,1.073,0.053699,0.435514,1.087,
    0.0332707,0.45575,1.003,0.0530059,0.467678,1.025,
    0.0168531,-0.346148,1.03,0.0544036,-0.337105,1.048,
    0.0234227,-0.145333,1.086,0.0575671,-0.135821,1.104,
    0.0263417,-0.085488,1.119,0.0597705,-0.0762487,1.138,
    0.0232832,-0.169152,1.075,0.0580149,-0.159434,1.09,
    0.0191611,-0.328844,1.037,0.0569335,-0.31944,1.052,
    0.0251269,-0.178835,1.07,0.0597193,-0.168987,1.086,
    0.0360502,0.47189,0.97,0.0559439,0.485128,0.994,
    0.0360502,0.47189,0.97,0.0559439,0.485128,0.994,
    0.0328465,-0.0602781,1.134,0.0654237,-0.0504858,1.151,
    0.0351386,-0.0473731,1.144,0.0678579,-0.0376799,1.158,
    0.0265878,-0.333457,1.035,0.0634954,-0.323913,1.052};
    // kNumObservations = sizeof(data1)/sizeof(data1[0]) /6;    
    // for (int i = 0; i < kNumObservations; ++i) {
    //     double objectWeight = 1.0/kNumObservations;
    //     // cout << data1[6*i] << " "<< data1[6*i+1] << " "<< data1[6*i+2] << " || "<< data1[6*i+3] << " "<< data1[6*i+4] << " "<< data1[6*i+5] <<endl;

    //     // cout << "~~~~~~~~~~~~~~~"<<endl;

    //     ceres::CostFunction* cost_function = ReprojectionErrorNum::Create(data1[6*i],data1[6*i+1],data1[6*i+2],data1[6*i+3],data1[6*i+4],data1[6*i+5],objectWeight);

    //     problem.AddResidualBlock(cost_function, NULL, c_rotation, c_translation);	 
    // }


    kNumObservations = sizeof(graychair)/sizeof(graychair[0]) /6;    
    for (int i = 0; i < kNumObservations; ++i) {
        problem.SetParameterBlockConstant(p_rotation[0]);
        problem.SetParameterBlockConstant(p_translation[0]);
        double objectWeight = 1.0/kNumObservations;
        ceres::CostFunction* cost_function = ReprojectionErrorNum::Create(graychair[6*i],graychair[6*i+1],graychair[6*i+2],graychair[6*i+3],graychair[6*i+4],graychair[6*i+5],objectWeight);
        problem.AddResidualBlock(cost_function, NULL, c_rotation, c_translation, p_rotation[0], p_translation[0]);    
    }

    kNumObservations = sizeof(bottle)/sizeof(bottle[0]) /6;    
    for (int i = 0; i < kNumObservations; ++i) {
        problem.SetParameterBlockConstant(p_rotation[1]);
        problem.SetParameterBlockConstant(p_translation[1]);
        double objectWeight = 1.0/kNumObservations;
        ceres::CostFunction* cost_function = ReprojectionErrorNum::Create(bottle[6*i],bottle[6*i+1],bottle[6*i+2],bottle[6*i+3],bottle[6*i+4],bottle[6*i+5],objectWeight);
        problem.AddResidualBlock(cost_function, NULL, c_rotation, c_translation, p_rotation[1], p_translation[1]);    
    }


    kNumObservations = sizeof(bluechair)/sizeof(bluechair[0]) /6;    
    for (int i = 0; i < kNumObservations; ++i) {
        problem.SetParameterBlockConstant(p_rotation[2]);
        problem.SetParameterBlockConstant(p_translation[2]);
        double objectWeight = 1.0/kNumObservations;
        ceres::CostFunction* cost_function = ReprojectionErrorNum::Create(bluechair[6*i],bluechair[6*i+1],bluechair[6*i+2],bluechair[6*i+3],bluechair[6*i+4],bluechair[6*i+5],objectWeight);
        problem.AddResidualBlock(cost_function, NULL, c_rotation, c_translation, p_rotation[2], p_translation[2]);    
    }


    kNumObservations = sizeof(person)/sizeof(person[0]) /6;    
    for (int i = 0; i < kNumObservations; ++i) {
        double objectWeight = 1.0/kNumObservations;
        ceres::CostFunction* cost_function = ReprojectionErrorNum::Create(person[6*i],person[6*i+1],person[6*i+2],person[6*i+3],person[6*i+4],person[6*i+5],objectWeight);
        problem.AddResidualBlock(cost_function, NULL, c_rotation, c_translation, p_rotation[3], p_translation[3]);    
    }

    // problem.SetParameterBlockConstant(c_rotation);
    ceres::LossFunction *loss_function;
        //loss_function = new ceres::HuberLoss(1.0);
    // loss_function = new ceres::CauchyLoss(1.0);
    ceres::Solver::Options options;
    options.max_num_iterations = 250;
    options.linear_solver_type = ceres::DENSE_QR;
    options.minimizer_progress_to_stdout = true;

    ceres::Solver::Summary summary;
    ceres::Solve(options, &problem, &summary);
    std::cout << summary.BriefReport() << "\n";

    std::cout <<c_rotation[0]<<" "<<c_rotation[1]<<" "<<c_rotation[2]<<" "<<c_rotation[3] << "\n";
    std::cout <<c_translation[0] <<" "<<c_translation[1] <<" "<<c_translation[2]<< "\n";


    std::cout <<p_rotation[3][0]<<" "<<p_rotation[3][1]<<" "<<p_rotation[3][2]<<" "<<p_rotation[3][3] << "\n";
    std::cout <<p_translation[3][0] <<" "<<p_translation[3][1] <<" "<<p_translation[3][2]<< "\n";

    return 0;
}